/*  Lecture 1 
1. basic reset using the universal selector
2. how to set proejct wide font definitions
3. how to clip parts of elements using clip-path*/

/* COLORS:
Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485
*/
 

* {
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
}/* 1. basic reset usng universal selector
    browser adds some padding to all the element as default.
    we are selecting all the elements and setting margin and padding to 0, to start off clean*/


body{
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}/* 2. set project wide font definitions*/


.header{
    height: 95vh;
    background-image: linear-gradient(
        to right bottom, 
        rgba(126, 213, 111, 0.8), 
        rgba(40, 180, 131, 0.8) ), 
        url(../img/hero.jpg);
    background-size: cover;
    background-position: top;/*header image stays constant at the top when resizing the window*/
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /* Importatn - clip-path creates clipping region that sets what part of element should be shown*/

}

/*LECTURE 2 
1. The easiest way to center anything with  the   
    transform, top and left properties. */
.logo-box{
    position: absolute;
    top: 40px;
    left: 40px;
}    

.logo{
    height: 35px;
}

.text-box{
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);

    margin-bottom: 60px;
    text-align: center;
    
}

.heading-primary{
    color: #fff;
    text-transform: uppercase;
    backface-visibility: hidden;
}

.heading-primary-main{
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    animation: moveInLeft 1s ease-out;
   


}

.heading-primary-sub{
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;

    animation: moveInRight 1s ease-out;
}
/*LECTURE 3
1. creating CSS animation using @keyframes and the animation poperty*/

@keyframes moveInLeft {
    0%{
        opacity: 0;
        transform: translateX(-100px)
    }

    80%{
        transform: translateX(10px);

    }

    100%{
        opacity: 1;
        transform: translate(0);
    }

}
/* @keyframes css controld the intermediate steps in css animation sequence by defining styles for keyframs or waypoints.*/

@keyframes moveInRight {
    0%{
        opacity: 0;
        transform: translateX(100px)
    }

    80%{
        transform: translateX(-10px);

    }

    100%{
        opacity: 1;
        transform: translate(0);
    }

}

/*LECTURE 4
    Building a complex animated button
    1. what pseudo-elements are pseudo-classes are
    2. How and why to use ::after pseudo-element
    3. How to create a creative hover animation effect using the transition property

*/

.btn:link,
.btn:visited {
    text-decoration: none;
    text-transform: uppercase;
    padding: 15px 40px;
    display: inline-block;
 
}



.btn-white{
    background-color: #fff;
    color: #777
}